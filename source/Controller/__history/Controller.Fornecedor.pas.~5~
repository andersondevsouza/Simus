unit Controller.Fornecedor;

interface

uses
  Model.Fornecedor, DataSnap.DBClient;

type
  TControllerFornecedor = class
    private
      FCodigo: Integer;
      FNomeFantasia: String;
      FRazaoSocial: String;
      FCnpj: String;
      FStatus: String;
      FModelCliente: TModelFornecedor;
      constructor Create;
    public
      destructor Destroy; override;
      property Codigo: Integer read FCodigo write FCodigo;
      property NomeFantasia: String read FNomeFantasia write FNomeFantasia;
      property RazaoSocial: String read FRazaoSocial write FRazaoSocial;
      property Cnpj: String read FCnpj write FCnpj;
      property Status: String read FStatus write FStatus;

      function Criar: integer;
      procedure Editar;
      procedure Deletar;
      function Listar(AFilter: String): TClientDataSet;
      function ValidarCpf: Boolean;
  end;

implementation

{ TControllerFornecedor }

constructor TControllerFornecedor.Create;
begin
end;

function TControllerFornecedor.Criar: Integer;
begin
  var LModelCliente := TModelCliente.New
    .Nome(Nome)
    .Cpf(Cpf)
    .DtNascimento(DtNascimento)
    .Status(Status)
    .Criar;
end;

procedure TControllerFornecedor.Deletar;
begin
  var LModelCliente := TModelCliente.New
    .Codigo(Codigo)
    .Deletar;
end;

destructor TControllerFornecedor.Destroy;
begin
  FModelCliente.Free;
  inherited;
end;

procedure TControllerFornecedor.Editar;
begin
  var LModelCliente := TModelCliente.New
    .Codigo(Codigo)
    .Nome(Nome)
    .Cpf(Cpf)
    .DtNascimento(DtNascimento)
    .Status(Status)
    .Editar;
end;

function TControllerFornecedor.Listar(AFilter: String): TClientDataSet;
begin
  var LModelCliente := TModelCliente.New
    .Listar(AFilter, Result);
end;

function TControllerFornecedor.ValidarCpf: Boolean;
begin
  var LModelCliente := TModelCliente.New
    .Cpf(cpf)
    .ValidarCpf(Result);
end;

end.
