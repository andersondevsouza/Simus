unit Controller.Venda;

interface

uses
  Model.Venda, DataSnap.DBClient, System.SysUtils;

type
  TControllerVenda = class
    private
      FCodigo: Integer;
      FCliente: Integer;
      FData: TDateTime;
      FTotal: Double;
      FStatus: String;
      FItens: TClientDataSet;
    public
      property Codigo: Integer read FCodigo write FCodigo;
      property Cliente: Integer read FCliente write FCliente;
      property Data: TDateTime read FData write FData;
      property Total: Double read FTotal write FTotal;
      property Status: String read FStatus write FStatus;
      property Itens: TClientDataSet read FItens write FItens;

      function Criar: integer;
      procedure Editar;
      procedure Deletar;
      function Listar(AFilter: String): TClientDataSet;
      function ListarItens(AVenda: Integer): TClientDataSet;
      function ValidarCpf: Boolean;
  end;

implementation

{ TControllerVenda }

function TControllerVenda.Criar: integer;
begin
  var LTotal := StringReplace(FloatToStrF(Total, ffNumber, 10,2), ',', '.', [rfReplaceAll]);
  var LVenda := TModelVenda.New
    .Cliente(Cliente)
    .Data(Data)
    .Total(LTotal)
    .Status(Status)
    .Itens(Itens)
    .Criar;
end;

procedure TControllerVenda.Deletar;
begin
  var LVenda := TModelVenda.New
    .Codigo(Codigo)
    .Deletar;
end;

procedure TControllerVenda.Editar;
begin
  var LTotal := StringReplace(FloatToStrF(Total, ffNumber, 10,2), ',', '.', [rfReplaceAll]);
  var LVenda := TModelVenda.New
    .Codigo(Codigo)
    .Cliente(Cliente)
    .Total(LTotal)
    .Status(Status)
    .Itens(Itens)
    .Editar;
end;

function TControllerVenda.Listar(AFilter: String): TClientDataSet;
begin
  var LVenda := TModelVenda.New
    .Listar(AFilter);
end;

function TControllerVenda.ListarItens(AVenda: Integer): TClientDataSet;
begin

end;

function TControllerVenda.ValidarCpf: Boolean;
begin

end;

end.
